{"version":3,"file":"component---src-pages-index-js-3b85df66c03983db2c19.js","mappings":"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","sources":["webpack://wisnu-dev-blog/./src/components/bio.js","webpack://wisnu-dev-blog/./src/blog.module.css","webpack://wisnu-dev-blog/./src/components/blog-layout.js","webpack://wisnu-dev-blog/./src/pages/index.js","webpack://wisnu-dev-blog/./src/components/seo.js"],"sourcesContent":["import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport * as blogStyles from \"../blog.module.css\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            dp\n            bio\n            social {\n              twitter {\n                title\n                url\n                username\n              }\n              github {\n                title\n                url\n                username\n              }\n              dev {\n                title\n                url\n                username\n              }\n              email {\n                title\n                url\n                username\n              }\n              linkedin {\n                title\n                url\n                username\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social_ids = data.site.siteMetadata?.author?.social\n  const _social_ids = Object.keys(social_ids)\n\n  return (\n    <section className={blogStyles.bio}>\n      <section className={blogStyles.imgWrapper}>\n        <img src={author.dp} alt=\"DP\" />\n      </section>\n      <section className={blogStyles.bioWrapper}>\n        <div\n          className={blogStyles.textWrapper}\n          dangerouslySetInnerHTML={{ __html: author.bio }}\n        />\n        <div className={blogStyles.socialWrapper}>\n          {_social_ids.map((social_id, i) => (\n            <a\n              href={social_ids[social_id].url + social_ids[social_id].username}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              key={i}\n            >\n              <img\n                src={`/icons/${social_ids[social_id].title}.png`}\n                alt={social_ids[social_id].title}\n              />\n            </a>\n          ))}\n        </div>\n      </section>\n    </section>\n  )\n}\n\nexport default Bio\n","// extracted by mini-css-extract-plugin\nexport var article = \"blog-module--article--7ea7b\";\nexport var articleTitle = \"blog-module--article-title--75525\";\nexport var articles = \"blog-module--articles--b496b\";\nexport var bio = \"blog-module--bio--b0f79\";\nexport var bioWrapper = \"blog-module--bio-wrapper--e3f86\";\nexport var date = \"blog-module--date--8988c\";\nexport var imgWrapper = \"blog-module--img-wrapper--ea69d\";\nexport var siteTitle = \"blog-module--site-title--10494\";\nexport var socialWrapper = \"blog-module--social-wrapper--6028c\";\nexport var tag = \"blog-module--tag--4a981\";\nexport var tags = \"blog-module--tags--57a84\";\nexport var textWrapper = \"blog-module--text-wrapper--4da65\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Bio from \"../components/bio\"\nimport Seo from \"../components/seo\"\nimport * as blogStyles from \"../blog.module.css\"\n\nconst BlogLayout = ({ headerTitle, children }) => {\n  return (\n    <main>\n      <Seo title=\"Blog\" />\n      <header>\n        <Link className={blogStyles.siteTitle} to=\"/\">\n          {headerTitle}\n        </Link>\n      </header>\n      <Bio />\n      <section className={blogStyles.articles}>{children}</section>\n      <footer>\n        <p>&copy; {new Date().getFullYear()}</p>\n      </footer>\n    </main>\n  )\n}\n\nexport default BlogLayout\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport BlogLayout from \"../components/blog-layout\"\nimport Seo from \"../components/seo\"\nimport * as blogStyles from \"../blog.module.css\"\n\nconst BlogIndex = ({ data }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <BlogLayout title={siteTitle}>\n        <Seo title=\"Blog\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </BlogLayout>\n    )\n  }\n\n  return (\n    <BlogLayout headerTitle={siteTitle}>\n      {posts.map(post => {\n        const title = post.frontmatter.title || post.fields.slug\n        const date = post.frontmatter.date\n        return (\n          <article className={blogStyles.article} key={post.fields.slug}>\n            <h2 className={blogStyles.articleTitle}>\n              <Link to={post.fields.slug} itemProp=\"url\">\n                {title}\n              </Link>\n            </h2>\n            <small className={blogStyles.date}>{date}</small>\n            <div className={blogStyles.tags}>\n              {post.frontmatter.tags.map((tag, i) => (\n                <Link key={i} to={`tags/${tag}`} className={blogStyles.tag}>\n                  {tag}\n                </Link>\n              ))}\n            </div>\n          </article>\n        )\n      })}\n    </BlogLayout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          tags\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter {\n                username\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter?.username || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","_data$site$siteMetada3","data","useStaticQuery","author","site","siteMetadata","social_ids","social","_social_ids","Object","keys","React","className","src","dp","alt","dangerouslySetInnerHTML","__html","bio","map","social_id","i","href","url","username","target","rel","key","title","_ref","headerTitle","children","Seo","Link","to","Date","getFullYear","siteTitle","posts","allMarkdownRemark","nodes","length","BlogLayout","post","frontmatter","fields","slug","date","itemProp","tags","tag","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","_site$siteMetadata2$s2","description","lang","meta","metaDescription","defaultTitle","Helmet","htmlAttributes","titleTemplate","name","content","property","twitter","concat","defaultProps"],"sourceRoot":""}