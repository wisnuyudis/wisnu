{"version":3,"file":"component---src-pages-blog-js-08890714f52a680db1d8.js","mappings":"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","sources":["webpack://wisnu-dev-blog/./src/pages/blog.js","webpack://wisnu-dev-blog/./src/components/header.js","webpack://wisnu-dev-blog/./src/components/footer.js","webpack://wisnu-dev-blog/./src/components/layout.js"],"sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nconst BlogPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout \n      location={location} \n      title={siteTitle}\n      pageTitle=\"Blog\"\n      pageDescription=\"All blog posts\"\n    >\n      <div className=\"fade-in\">\n        <div className=\"glass-card\" style={{ textAlign: 'center', marginBottom: '3rem' }}>\n          <h1>Blog Posts</h1>\n          <p style={{ fontSize: '1.1rem', color: 'rgba(255,255,255,0.8)' }}>\n            Explore all my thoughts, ideas, and stories.\n          </p>\n        </div>\n\n        {posts.length === 0 ? (\n          <div className=\"glass-card\" style={{ textAlign: 'center' }}>\n            <p>No blog posts found.</p>\n          </div>\n        ) : (\n          <div className=\"posts-grid\">\n            {posts.map(post => {\n              const title = post.frontmatter.title || post.fields.slug\n              const tags = post.frontmatter.tags || []\n\n              return (\n                <Link\n                  to={post.fields.slug}\n                  key={post.fields.slug}\n                  className=\"post-card\"\n                  style={{ textDecoration: 'none' }}\n                >\n                  <div>\n                    <div style={{ marginBottom: '1rem' }}>\n                      {tags.map(tag => (\n                        <span key={tag} className=\"tag\" style={{ marginRight: '0.5rem' }}>\n                          {tag}\n                        </span>\n                      ))}\n                    </div>\n                    <h3 style={{ color: 'rgba(255,255,255,0.95)' }}>{title}</h3>\n                    <p\n                      style={{ color: 'rgba(255,255,255,0.7)' }}\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                    />\n                    <div className=\"blog-meta\">\n                      <span>{post.frontmatter.date}</span>\n                      <span>{post.timeToRead} mins</span>\n                    </div>\n                  </div>\n                </Link>\n              )\n            })}\n          </div>\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n        timeToRead\n      }\n    }\n  }\n`","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"glass-nav\">\n    <div className=\"container\">\n      <nav style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Link to=\"/\" style={{ textDecoration: 'none' }}>\n          <h1 style={{ \n            margin: 0, \n            fontSize: '1.8rem',\n            background: 'linear-gradient(45deg, rgba(255,255,255,0.95), #f093fb)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            backgroundClip: 'text'\n          }}>\n            {siteTitle}\n          </h1>\n        </Link>\n        <div style={{ display: 'flex', gap: '2rem', alignItems: 'center' }}>\n          <Link to=\"/\" className=\"nav-link\">\n            Home\n          </Link>\n          <Link to=\"/blog\" className=\"nav-link\">\n            Blog\n          </Link>\n          <Link to=\"/about\" className=\"nav-link\">\n            About\n          </Link>\n          <Link to=\"/contact\" className=\"nav-link\">\n            Contact\n          </Link>\n        </div>\n      </nav>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header","import React from \"react\"\n\nconst Footer = () => (\n  <footer className=\"glass-nav\" style={{ marginTop: '4rem' }}>\n    <div className=\"container\">\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'space-between', \n        alignItems: 'center',\n        flexWrap: 'wrap',\n        gap: '1rem'\n      }}>\n        <div>\n          <p style={{ margin: 0, color: 'rgba(255,255,255,0.7)' }}>\n            Hand-crafted with love by{\" \"}\n            <a \n              href=\"https://twitter.com/wisnu\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              style={{ color: '#f093fb' }}\n            >\n              Wisnu\n            </a>\n          </p>\n        </div>\n        <div style={{ display: 'flex', gap: '1.5rem' }}>\n          <a \n            href=\"https://github.com\" \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            style={{ color: 'rgba(255,255,255,0.7)', textTransform: 'uppercase', fontSize: '0.9rem' }}\n          >\n            GitHub\n          </a>\n          <a \n            href=\"https://twitter.com\" \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            style={{ color: 'rgba(255,255,255,0.7)', textTransform: 'uppercase', fontSize: '0.9rem' }}\n          >\n            Twitter\n          </a>\n          <a \n            href=\"https://instagram.com\" \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            style={{ color: 'rgba(255,255,255,0.7)', textTransform: 'uppercase', fontSize: '0.9rem' }}\n          >\n            Instagram\n          </a>\n        </div>\n      </div>\n    </div>\n  </footer>\n)\n\nexport default Footer","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\n\nconst Layout = ({ children, pageTitle, pageDescription }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          description\n          author {\n            name\n          }\n        }\n      }\n    }\n  `)\n\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const siteDescription = data.site.siteMetadata?.description || `Description`\n\n  return (\n    <>\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{pageTitle ? `${pageTitle} | ${siteTitle}` : siteTitle}</title>\n        <meta name=\"description\" content={pageDescription || siteDescription} />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta property=\"og:title\" content={pageTitle || siteTitle} />\n        <meta property=\"og:description\" content={pageDescription || siteDescription} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:creator\" content={data.site.siteMetadata?.author?.name || ``} />\n        <meta name=\"twitter:title\" content={pageTitle || siteTitle} />\n        <meta name=\"twitter:description\" content={pageDescription || siteDescription} />\n        <script src=\"https://identity.netlify.com/v1/netlify-identity-widget.js\"></script>\n      </Helmet>\n      <div className=\"site-wrapper\">\n        <Header siteTitle={siteTitle} />\n        <main className=\"main-content\">\n          <div className=\"container\">\n            {children}\n          </div>\n        </main>\n        <Footer />\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  pageTitle: PropTypes.string,\n  pageDescription: PropTypes.string,\n}\n\nexport default Layout"],"names":["_ref","_data$site$siteMetada","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","React","Layout","pageTitle","pageDescription","className","style","textAlign","marginBottom","fontSize","color","length","map","post","frontmatter","fields","slug","tags","Link","to","key","textDecoration","tag","marginRight","dangerouslySetInnerHTML","__html","description","excerpt","date","timeToRead","Header","display","justifyContent","alignItems","margin","background","WebkitBackgroundClip","WebkitTextFillColor","backgroundClip","gap","defaultProps","Footer","marginTop","flexWrap","href","target","rel","textTransform","_data$site$siteMetada2","_data$site$siteMetada3","_data$site$siteMetada4","children","useStaticQuery","siteDescription","Helmet","lang","name","content","property","author","src"],"sourceRoot":""}