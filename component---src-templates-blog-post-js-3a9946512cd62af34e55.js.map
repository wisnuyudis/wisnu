{"version":3,"file":"component---src-templates-blog-post-js-3a9946512cd62af34e55.js","mappings":"8JA4BA,UAvByBA,IAAyB,IAADC,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAUH,EAC1C,MAAMI,EAAOF,EAAKG,eACZC,GAAkC,QAAtBL,EAAAC,EAAKK,KAAKC,oBAAY,IAAAP,OAAA,EAAtBA,EAAwBQ,QAAK,QAE/C,OACEC,EAAAA,cAACC,EAAAA,EAAU,CACTR,SAAUA,EACVS,YAAaN,EACbG,MAAOL,EAAKS,YAAYJ,MACxBK,YAAaV,EAAKS,YAAYC,aAAeV,EAAKW,QAClDC,KAAMZ,EAAKS,YAAYG,KACvBC,KAAMb,EAAKS,YAAYI,MAEvBP,EAAAA,cAAA,OACEQ,UAAWC,EAAAA,GACXC,GAAG,aACHC,wBAAyB,CAAEC,OAAQlB,EAAKmB,MACxCC,SAAS,iB,gOCrBV,IAAIC,EAAU,8BACVC,EAAgB,qCAChBC,EAAe,oCACfC,EAAU,8BACVZ,EAAO,2BACPV,EAAY,iCACZuB,EAAM,0BACNZ,EAAO,0B,yDCHlB,MAAMa,EAAM9B,IAAyC,IAAD+B,EAAAC,EAAAC,EAAAC,EAAA,IAAvC,YAAEpB,EAAW,KAAEqB,EAAI,KAAEC,EAAI,MAAE3B,GAAOT,EAC7C,MAAM,KAAEO,IAAS8B,EAAAA,EAAAA,gBAAe,aAkB1BC,EAAkBxB,GAAeP,EAAKC,aAAaM,YACnDyB,EAAgC,QAApBR,EAAGxB,EAAKC,oBAAY,IAAAuB,OAAA,EAAjBA,EAAmBtB,MAExC,OACEC,EAAAA,cAAC8B,EAAAA,EAAM,CACLC,eAAgB,CACdN,QAEF1B,MAAOA,EACPiC,cAAeH,EAAY,QAAWA,EAAiB,KACvDH,KAAM,CACJ,CACEO,KAAK,cACLf,QAASU,GAEX,CACEM,SAAS,WACThB,QAASnB,GAEX,CACEmC,SAAS,iBACThB,QAASU,GAEX,CACEM,SAAS,UACThB,QAAQ,WAEV,CACEe,KAAK,eACLf,QAAQ,WAEV,CACEe,KAAK,kBACLf,SAA0B,QAAjBI,EAAAzB,EAAKC,oBAAY,IAAAwB,GAAQ,QAARC,EAAjBD,EAAmBa,cAAM,IAAAZ,GAAS,QAATC,EAAzBD,EAA2Ba,eAAO,IAAAZ,OAAjB,EAAjBA,EAAoCa,WAAQ,IAEvD,CACEJ,KAAK,gBACLf,QAASnB,GAEX,CACEkC,KAAK,sBACLf,QAASU,IAEXU,OAAOZ,MAKfN,EAAImB,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNtB,YAAY,IAUd,K,mEC3CA,IArCmBd,IAOZ,IAPa,YAClBY,EAAW,MACXH,EAAK,YACLK,EAAW,KACXE,EAAI,KACJC,EAAI,SACJiC,GACDlD,EACC,OACEU,EAAAA,cAAA,YACEA,EAAAA,cAACoB,EAAAA,EAAG,CAACrB,MAAOA,EAAOK,YAAaA,IAChCJ,EAAAA,cAAA,cACEA,EAAAA,cAACyC,EAAAA,KAAI,CAACjC,UAAWC,EAAAA,GAAsBiC,GAAG,KACvCxC,IAGLF,EAAAA,cAAA,WAASQ,UAAWC,EAAAA,IAClBT,EAAAA,cAAA,OAAKQ,UAAWC,EAAAA,IACdT,EAAAA,cAAA,MAAIQ,UAAWC,EAAAA,IAA0BV,GACzCC,EAAAA,cAAA,SAAOQ,UAAWC,EAAAA,IAAkBH,GACpCN,EAAAA,cAAA,OAAKQ,UAAWC,EAAAA,IACbF,aAAI,EAAJA,EAAMoC,IAAI,CAACxB,EAAKyB,IACf5C,EAAAA,cAACyC,EAAAA,KAAI,CAACI,IAAKD,EAAGF,GAAE,SAAWvB,EAAOX,UAAWC,EAAAA,IAC1CU,MAKRqB,GAEHxC,EAAAA,cAAA,cACEA,EAAAA,cAAA,SAAG,MAAQ,IAAI8C,MAAOC,iB","sources":["webpack://wisnu-dev-blog/./src/templates/blog-post.js","webpack://wisnu-dev-blog/./src/post.module.css","webpack://wisnu-dev-blog/./src/components/seo.js","webpack://wisnu-dev-blog/./src/components/post-layout.js"],"sourcesContent":["import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport PostLayout from \"../components/post-layout\"\nimport * as postStyles from \"../post.module.css\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n\n  return (\n    <PostLayout\n      location={location}\n      headerTitle={siteTitle}\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n      date={post.frontmatter.date}\n      tags={post.frontmatter.tags}\n    >\n      <div\n        className={postStyles.content}\n        id=\"md-content\"\n        dangerouslySetInnerHTML={{ __html: post.html }}\n        itemProp=\"articleBody\"\n      />\n    </PostLayout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nexport var article = \"post-module--article--dab49\";\nexport var articleHeader = \"post-module--article-header--e2c55\";\nexport var articleTitle = \"post-module--article-title--8cd1a\";\nexport var content = \"post-module--content--924fc\";\nexport var date = \"post-module--date--abd7d\";\nexport var siteTitle = \"post-module--site-title--c30c9\";\nexport var tag = \"post-module--tag--b2232\";\nexport var tags = \"post-module--tags--efd55\";","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter {\n                username\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter?.username || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as postStyles from \"../post.module.css\"\nimport Seo from \"../components/seo\"\n\nconst PostLayout = ({\n  headerTitle,\n  title,\n  description,\n  date,\n  tags,\n  children,\n}) => {\n  return (\n    <main>\n      <Seo title={title} description={description} />\n      <header>\n        <Link className={postStyles.siteTitle} to=\"/\">\n          {headerTitle}\n        </Link>\n      </header>\n      <section className={postStyles.article}>\n        <div className={postStyles.articleHeader}>\n          <h2 className={postStyles.articleTitle}>{title}</h2>\n          <small className={postStyles.date}>{date}</small>\n          <div className={postStyles.tags}>\n            {tags?.map((tag, i) => (\n              <Link key={i} to={`/tags/${tag}`} className={postStyles.tag}>\n                {tag}\n              </Link>\n            ))}\n          </div>\n        </div>\n        {children}\n      </section>\n      <footer>\n        <p>&copy; {new Date().getFullYear()}</p>\n      </footer>\n    </main>\n  )\n}\n\nexport default PostLayout\n"],"names":["_ref","_data$site$siteMetada","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","React","PostLayout","headerTitle","frontmatter","description","excerpt","date","tags","className","postStyles","id","dangerouslySetInnerHTML","__html","html","itemProp","article","articleHeader","articleTitle","content","tag","Seo","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","_site$siteMetadata2$s2","lang","meta","useStaticQuery","metaDescription","defaultTitle","Helmet","htmlAttributes","titleTemplate","name","property","social","twitter","username","concat","defaultProps","children","Link","to","map","i","key","Date","getFullYear"],"sourceRoot":""}