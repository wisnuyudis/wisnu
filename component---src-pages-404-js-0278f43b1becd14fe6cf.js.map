{"version":3,"file":"component---src-pages-404-js-0278f43b1becd14fe6cf.js","mappings":"8JAiBA,UAXqBA,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EACtC,MAAMG,EAAYF,EAAKG,KAAKC,aAAaC,MAEzC,OACEC,EAAAA,cAACC,EAAAA,EAAU,CAACC,YAAaN,EAAWG,MAAM,kBACxCC,EAAAA,cAACG,EAAAA,EAAG,CAACJ,MAAK,oBAAsBH,IAChCI,EAAAA,cAAA,SAAG,4D,gOCXF,IAAII,EAAU,8BACVC,EAAgB,qCAChBC,EAAe,oCACfC,EAAU,8BACVC,EAAO,2BACPZ,EAAY,iCACZa,EAAM,0BACNC,EAAO,0B,yDCHlB,MAAMP,EAAMV,IAAyC,IAADkB,EAAAC,EAAAC,EAAAC,EAAA,IAAvC,YAAEC,EAAW,KAAEC,EAAI,KAAEC,EAAI,MAAElB,GAAON,EAC7C,MAAM,KAAEI,IAASqB,EAAAA,EAAAA,gBAAe,aAkB1BC,EAAkBJ,GAAelB,EAAKC,aAAaiB,YACnDK,EAAgC,QAApBT,EAAGd,EAAKC,oBAAY,IAAAa,OAAA,EAAjBA,EAAmBZ,MAExC,OACEC,EAAAA,cAACqB,EAAAA,EAAM,CACLC,eAAgB,CACdN,QAEFjB,MAAOA,EACPwB,cAAeH,EAAY,QAAWA,EAAiB,KACvDH,KAAM,CACJ,CACEO,KAAK,cACLjB,QAASY,GAEX,CACEM,SAAS,WACTlB,QAASR,GAEX,CACE0B,SAAS,iBACTlB,QAASY,GAEX,CACEM,SAAS,UACTlB,QAAQ,WAEV,CACEiB,KAAK,eACLjB,QAAQ,WAEV,CACEiB,KAAK,kBACLjB,SAA0B,QAAjBK,EAAAf,EAAKC,oBAAY,IAAAc,GAAQ,QAARC,EAAjBD,EAAmBc,cAAM,IAAAb,GAAS,QAATC,EAAzBD,EAA2Bc,eAAO,IAAAb,OAAjB,EAAjBA,EAAoCc,WAAQ,IAEvD,CACEJ,KAAK,gBACLjB,QAASR,GAEX,CACEyB,KAAK,sBACLjB,QAASY,IAEXU,OAAOZ,MAKfd,EAAI2B,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,K,mEC3CA,IArCmBtB,IAOZ,IAPa,YAClBS,EAAW,MACXH,EAAK,YACLgB,EAAW,KACXP,EAAI,KACJE,EAAI,SACJqB,GACDtC,EACC,OACEO,EAAAA,cAAA,YACEA,EAAAA,cAACG,EAAAA,EAAG,CAACJ,MAAOA,EAAOgB,YAAaA,IAChCf,EAAAA,cAAA,cACEA,EAAAA,cAACgC,EAAAA,KAAI,CAACC,UAAWC,EAAAA,GAAsBC,GAAG,KACvCjC,IAGLF,EAAAA,cAAA,WAASiC,UAAWC,EAAAA,IAClBlC,EAAAA,cAAA,OAAKiC,UAAWC,EAAAA,IACdlC,EAAAA,cAAA,MAAIiC,UAAWC,EAAAA,IAA0BnC,GACzCC,EAAAA,cAAA,SAAOiC,UAAWC,EAAAA,IAAkB1B,GACpCR,EAAAA,cAAA,OAAKiC,UAAWC,EAAAA,IACbxB,aAAI,EAAJA,EAAM0B,IAAI,CAAC3B,EAAK4B,IACfrC,EAAAA,cAACgC,EAAAA,KAAI,CAACM,IAAKD,EAAGF,GAAE,SAAW1B,EAAOwB,UAAWC,EAAAA,IAC1CzB,MAKRsB,GAEH/B,EAAAA,cAAA,cACEA,EAAAA,cAAA,SAAG,MAAQ,IAAIuC,MAAOC,iB","sources":["webpack://wisnu-dev-blog/./src/pages/404.js","webpack://wisnu-dev-blog/./src/post.module.css","webpack://wisnu-dev-blog/./src/components/seo.js","webpack://wisnu-dev-blog/./src/components/post-layout.js"],"sourcesContent":["import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport PostLayout from \"../components/post-layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <PostLayout headerTitle={siteTitle} title=\"404: Not Found\">\n      <Seo title={`404: Not Found | ${siteTitle}`} />\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </PostLayout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nexport var article = \"post-module--article--dab49\";\nexport var articleHeader = \"post-module--article-header--e2c55\";\nexport var articleTitle = \"post-module--article-title--8cd1a\";\nexport var content = \"post-module--content--924fc\";\nexport var date = \"post-module--date--abd7d\";\nexport var siteTitle = \"post-module--site-title--c30c9\";\nexport var tag = \"post-module--tag--b2232\";\nexport var tags = \"post-module--tags--efd55\";","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter {\n                username\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter?.username || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as postStyles from \"../post.module.css\"\nimport Seo from \"../components/seo\"\n\nconst PostLayout = ({\n  headerTitle,\n  title,\n  description,\n  date,\n  tags,\n  children,\n}) => {\n  return (\n    <main>\n      <Seo title={title} description={description} />\n      <header>\n        <Link className={postStyles.siteTitle} to=\"/\">\n          {headerTitle}\n        </Link>\n      </header>\n      <section className={postStyles.article}>\n        <div className={postStyles.articleHeader}>\n          <h2 className={postStyles.articleTitle}>{title}</h2>\n          <small className={postStyles.date}>{date}</small>\n          <div className={postStyles.tags}>\n            {tags?.map((tag, i) => (\n              <Link key={i} to={`/tags/${tag}`} className={postStyles.tag}>\n                {tag}\n              </Link>\n            ))}\n          </div>\n        </div>\n        {children}\n      </section>\n      <footer>\n        <p>&copy; {new Date().getFullYear()}</p>\n      </footer>\n    </main>\n  )\n}\n\nexport default PostLayout\n"],"names":["_ref","data","location","siteTitle","site","siteMetadata","title","React","PostLayout","headerTitle","Seo","article","articleHeader","articleTitle","content","date","tag","tags","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","_site$siteMetadata2$s2","description","lang","meta","useStaticQuery","metaDescription","defaultTitle","Helmet","htmlAttributes","titleTemplate","name","property","social","twitter","username","concat","defaultProps","children","Link","className","postStyles","to","map","i","key","Date","getFullYear"],"sourceRoot":""}